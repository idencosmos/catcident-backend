services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DJANGO_SETTINGS_MODULE: config.settings.development
    command: >
      sh -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "
    env_file:
      - .env
      - .env.dev
    environment:
      DJANGO_ENV: development
      DJANGO_SETTINGS_MODULE: config.settings.development
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - internal
      - caddy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthcheck/"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data/
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5

  celery:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DJANGO_SETTINGS_MODULE: config.settings.development
    command: celery -A config worker -l info
    env_file:
      - .env
      - .env.dev
    environment:
      DJANGO_ENV: development
      DJANGO_SETTINGS_MODULE: config.settings.development
    volumes:
      - .:/app
    depends_on:
      - api
      - redis
    networks:
      - internal

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DJANGO_SETTINGS_MODULE: config.settings.development
    command: celery -A config beat -l info
    env_file:
      - .env
      - .env.dev
    environment:
      DJANGO_ENV: development
      DJANGO_SETTINGS_MODULE: config.settings.development
    volumes:
      - .:/app
    depends_on:
      - redis
    networks:
      - internal

volumes:
  db_data:
  redis_data:

networks:
  internal:
    driver: bridge
  caddy:
    external: true
